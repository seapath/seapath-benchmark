# Copyright (C) 2024 Savoir-faire Linux, Inc.
# SPDX-License-Identifier: Apache-2.0
---
- name: Prepare localhost
  hosts:
    localhost
  tasks:
    - name: Create tests results directory
      file:
        path: ../tests_results
        state: directory

- name: Prepare tested machines
  become: true
  hosts:
    - monitored_machines
    - benchmarked_machines
  vars:
    - test_scenario_name: disk_cpu_rttest
  tasks:
    - name: Record test start time
      shell:
        cmd: >-
          date +%F-%Hh%Mm%S
      register: test_start_time
    - name: Load scenario
      include_vars:
        file: "../vars/test_scenarios/{{ test_scenario_name }}.yaml"
        name: test_scenario

- name: Start monitoring test-profiles
  become: true
  hosts: monitored_machines
  tasks:
    - name: Run test-profiles
      include_role:
        name: "run_monitoring_tests_profiles"
      vars:
        test_profile: "{{ item[1] }}"
        mode: "{{ item[0].mode }}"
      loop: "{{ test_scenario.test_scenario|subelements('test_profiles') }}"
      when: item[0].type == 'monitoring'

- name: Start benchmark test-profiles
  become: true
  hosts: benchmarked_machines
  tasks:
    - name: Run benchmark test-profiles
      include_role:
        name: "run_benchmark_test_profiles"
      vars:
        test_profile: "{{ item[1] }}"
        mode: "{{ item[0].mode }}"
      loop: "{{ test_scenario.test_scenario|subelements('test_profiles') }}"
      when: item[0].type == 'benchmark'
    - name: Wait for benchmarks to finish
      async_status:
        jid: "{{ item.status.ansible_job_id }}"
      register: temp
      until: temp.finished
      retries: 10000
      delay: 10
      loop: "{{ active_benchmark }}"
      when: active_benchmark is defined

- name: End monitoring on monitored machines
  become: true
  hosts:
    - monitored_machines
  tasks:
  - name: Generate monitoring test-profiles results
    include_role:
      name: "get_monitoring_test_results"
    loop: "{{ active_monitoring }}"
    loop_control:
      loop_var: monitoring_item

- name: End benchmarks on benchmarked machines
  become: true
  hosts: benchmarked_machines
  tasks:
    - name: Generate benchmark test-profiles results
      include_role:
        name: "get_benchmark_test_results"
      vars:
        test_run_id: "{{ item }}"
      loop: "{{ benchmark_test_run_ids }}"
      when: benchmark_test_run_ids is defined

- name: Execute last tasks on localhost
  hosts:
    localhost
  tasks:
    - name: Rename test results directory
      shell:
        cmd: >-
          mv ../tests_results ../tests_results-$(date +%F_%Hh%Mm%S)
