# Copyright (C) 2024 Savoir-faire Linux, Inc.
# SPDX-License-Identifier: Apache-2.0
---
- name: Initialize variable roles
  set_fact:
    active_monitoring: "{{ active_monitoring }}"
    monitoring_test_run_ids: "{{ monitoring_test_run_ids }}"
    test_profile_exists: false
- name: Set test profile name variable
  set_fact:
    test_profile_name: "{{ (test_profile | list | first if test_profile is not string else test_profile) | trim }}"
- name: Extract test profile arguments from test scenario
  set_fact:
    test_profile_args: "{{ test_profile_args | default({}) | combine({ item.key: item.value }) }}"
  when: test_profile is not string
  loop: "{{ lookup('ansible.builtin.dict', test_profile[test_profile_name],wantlist=True ) }}"
- name: Set test-profile run identifier
  set_fact:
    monitoring_test_run_id: "{{ test_profile_name | replace('_', '') }}-{{ test_start_time.stdout }}"
- name: Append monitoring_test_run_id to monitoring_test_run_ids
  set_fact:
    monitoring_test_run_ids: "{{ monitoring_test_run_ids | combine({ test_profile_name: monitoring_test_run_id }) }}"
- name: Check if {{ test_profile_name }} arguments exists in role vars
  set_fact:
    test_profile_exists: "{{ test_profile_name in vars and lookup('vars', test_profile_name) is defined }}"
  when: test_profile_args is not defined
- name: Set test-profile arguments from role vars
  set_fact:
    test_profile_args: "{{ test_profile_args | default({}) | combine({ item.key: item.value }) }}"
  with_dict: "{{ lookup('vars', test_profile_name) }}"
  when: test_profile_exists|bool == true
- name: Start {{ test_profile_name }} monitoring
  shell:
    cmd: >-
      TEST_RESULTS_NAME="{{ monitoring_test_run_id }}" phoronix-test-suite batch-benchmark {{ test_profile_name }}
  environment: "{{ test_profile_args }}"
  async: 9999999
  poll: 0
  register: temp_status
- name: Register test profile monitoring status
  set_fact:
    active_monitoring: "{{ active_monitoring + [ { 'name': test_profile_name, 'status': temp_status } ] }}"
- name: Run needed custom task for {{ test_profile_name }}
  include_tasks: "{{ test_profile_name }}.yaml"
